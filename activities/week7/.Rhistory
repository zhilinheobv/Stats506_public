# libraries: ------------------------------------------------------------------
library(tidyverse)
# data: -----------------------------------------------------------------------
url = paste0(
'https://www.eia.gov/consumption/residential/data/2015/csv/',
'recs2015_public_v4.csv'
)
local_file = './recs2015_public_v4.csv'
# use local file if it exists, if not use url and save locally
if ( !file.exists(local_file) ) {
recs = read_delim(url, delim = ',')
write_delim(recs, path = local_file, delim = ',')
} else {
recs = read_delim(local_file, delim = ',')
}
# clean up key variables used in this problem: --------------------------------
recs_core =
recs %>%
transmute(
# id variables
id = DOEID,
weight = NWEIGHT,
# grouping factor
region = factor(REGIONC, c('Northeast', 'Midwest', 'South', 'West')),
# case selection
heat_home = factor(HEATHOME, 0:1, c('No', 'Yes') ),
# temp variables
temp_home = TEMPHOME,
temp_gone = TEMPGONE,
temp_night = TEMPNITE
) %>%
# Convert negative numbers to missing, for temps.
mutate_if(is.numeric, function(x) ifelse(x < 0, NA, x))
recs_core = filter(recs_core, heat_home == 'Yes')
## manually type out
temps_by_region0 =
recs_core %>%
group_by(region) %>%
summarize(
avg_temp_home = sum(temp_home * weight) / sum(weight),
avg_temp_gone = sum(temp_gone * weight) / sum(weight),
avg_temp_night = sum(temp_night * weight) / sum(weight),
.groups = 'drop'
)
View(temps_by_region0)
View(recs)
View(recs_core)
View(recs)
?factor
# clean up key variables used in this problem: --------------------------------
recs_core =
recs %>%
transmute(
# id variables
id = DOEID,
weight = NWEIGHT,
# grouping factor
region = factor(REGIONC, labels = c('Northeast', 'Midwest', 'South', 'West')),
# case selection
heat_home = factor(HEATHOME, 0:1, c('No', 'Yes') ),
# temp variables
temp_home = TEMPHOME,
temp_gone = TEMPGONE,
temp_night = TEMPNITE
) %>%
# Convert negative numbers to missing, for temps.
mutate_if(is.numeric, function(x) ifelse(x < 0, NA, x))
View(recs_core)
recs_core = filter(recs_core, heat_home == 'Yes')
## manually type out
temps_by_region0 =
recs_core %>%
group_by(region) %>%
summarize(
avg_temp_home = sum(temp_home * weight) / sum(weight),
avg_temp_gone = sum(temp_gone * weight) / sum(weight),
avg_temp_night = sum(temp_night * weight) / sum(weight),
.groups = 'drop'
)
View(temps_by_region0)
## task 1 - replace the repetition above using `across()`
temps_by_region1 = recs_core %>%
group_by(region) %>%
summarize(
across(starts_with("avg_temp"), function(x) (x*weight) / sum(weight))
)
# libraries: ------------------------------------------------------------------
library(tidyverse)
## task 1 - replace the repetition above using `across()`
temps_by_region1 = recs_core %>%
group_by(region) %>%
summarize(
across(starts_with("avg_temp"), function(x) (x*weight) / sum(weight))
)
?across
?dplyr::across
library(dplyr)
?across
?dplyr::across
sessionInfo()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
